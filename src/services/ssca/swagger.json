{
  "openapi": "3.0.3",
  "info": { "title": "SSCS Core API", "description": "manage your sscs", "version": "0.1.0" },
  "servers": [{ "url": "http://localhost:3000/" }],
  "paths": {
    "/api/login": {
      "post": {
        "tags": ["dev"],
        "operationId": "dev#login",
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Harness account ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": { "type": "string", "description": "Harness account ID", "example": "eBqAoNchMLKigC_qZ5EdC" },
            "example": "eBqAoNchMLKigC_qZ5EdC"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "description": "Harness organization ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness organization ID",
              "default": "",
              "example": "test-org"
            },
            "example": "test-org"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "description": "Harness project ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness project ID",
              "default": "",
              "example": "test-project"
            },
            "example": "test-project"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequestBody" },
              "example": { "password": "Sit est." }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "type": "string", "example": "Dignissimos et ab corporis natus." },
                "example": "Omnis voluptate sit ut qui delectus."
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/artifacts": {
      "post": {
        "tags": ["artifact"],
        "description": "create an artifact in the artifact db",
        "operationId": "artifact#createArtifact",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateArtifactRequestBody" },
              "example": {
                "accountIdentifier": "eBqAoNchMLKigC_qZ5EdC",
                "artifact": {
                  "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                  "name": "harness/image",
                  "tag": "latest",
                  "type": "repo/image",
                  "url": "https://console.cloud.google.com/gcr/images/imageName"
                },
                "attestation": {
                  "isAttested": false,
                  "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                },
                "metadata": {
                  "buildUrl": "log4Jj",
                  "format": "log4Jj",
                  "pipelineExecutionId": "log4Jj",
                  "pipelineIdentifier": "log4Jj",
                  "sequenceId": "log4Jj",
                  "stageIdentifier": "log4Jj",
                  "stepExecutionId": "Sunt voluptatem voluptas voluptatem facere nihil.",
                  "stepIdentifier": "log4Jj",
                  "tool": "log4Jj"
                },
                "orgIdentifier": "test-org",
                "projectIdentifier": "test-project",
                "sbom": { "data": "RXJyb3IgZGljdGEu", "name": "SBOM_Name", "url": "https://console.google.com/storage" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateArtifactResponseBody" },
                "example": { "artifactId": "Enim rerum magni rerum molestiae illo praesentium." }
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/artifacts/artifactId/{artifactId}/sbom/{filename}": {
      "get": {
        "tags": ["artifact"],
        "description": "get the SBOM for an artifact of a particular version",
        "operationId": "artifact#getArtifactSBOM",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "description": "ID of the artifact to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the artifact to fetch",
              "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
            },
            "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Ipsam sunt illum dolore repudiandae fugit." },
            "example": "Ipsa dolores."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Content-Length": {
                "required": true,
                "schema": { "type": "integer", "example": 2292267092897603485, "format": "int64" },
                "example": 4086286692912934160
              },
              "Content-Type": {
                "required": true,
                "schema": { "type": "string", "example": "Ratione id officia sed." },
                "example": "Quod qui."
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/artifacts/{artifactId}": {
      "get": {
        "tags": ["artifact"],
        "description": "get artifacts by passing an artifact id",
        "operationId": "artifact#getArtifactsById",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "description": "ID of the artifact to fetch",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the artifact to fetch",
              "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
            },
            "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetArtifactsByIDResponseBody" },
                "example": {
                  "artifacts": [
                    {
                      "artifact": {
                        "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                        "name": "harness/image",
                        "tag": "latest",
                        "type": "repo/image",
                        "url": "https://console.cloud.google.com/gcr/images/imageName"
                      },
                      "attestation": {
                        "isAttested": false,
                        "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                      },
                      "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
                    },
                    {
                      "artifact": {
                        "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                        "name": "harness/image",
                        "tag": "latest",
                        "type": "repo/image",
                        "url": "https://console.cloud.google.com/gcr/images/imageName"
                      },
                      "attestation": {
                        "isAttested": false,
                        "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                      },
                      "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/artifacts/{artifactId}/stepExecutions/{stepExeuctionId}/sbom/{filename}": {
      "get": {
        "tags": ["artifact"],
        "summary": "getSBOMFromExecutionId artifact",
        "description": "get the SBOM by passing the step execution id and the artifact id",
        "operationId": "artifact#getSBOMFromExecutionId",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Ut doloremque et." },
            "example": "Aspernatur ab ab."
          },
          {
            "name": "stepExeuctionId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Minus autem molestias voluptatibus eos et." },
            "example": "Fugit consequuntur dolores nisi harum."
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Laborum assumenda maiores voluptatem enim laborum magni." },
            "example": "Quasi fugit recusandae id."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "headers": {
              "Content-Length": {
                "required": true,
                "schema": { "type": "integer", "example": 5779643335059079431, "format": "int64" },
                "example": 1806106501918562548
              },
              "Content-Type": {
                "required": true,
                "schema": { "type": "string", "example": "Nobis voluptatem in eaque est dolor." },
                "example": "Eaque enim sunt."
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/artifacts/{stepExecutionId}/{stageId}/{stepId}": {
      "get": {
        "tags": ["artifact"],
        "description": "get a unique by passing an artifact id and other exeuction details",
        "operationId": "artifact#getUniqueArtifact",
        "parameters": [
          {
            "name": "stepExecutionId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Eligendi nihil vero error aut." },
            "example": "Facilis soluta cupiditate."
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Et molestias sunt eum." },
            "example": "Provident autem ut expedita."
          },
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "Qui distinctio." },
            "example": "Delectus aut itaque facere minima."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUniqueArtifactResponseBody" },
                "example": {
                  "Artifact": {
                    "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                    "name": "harness/image",
                    "tag": "latest",
                    "type": "repo/image",
                    "url": "https://console.cloud.google.com/gcr/images/imageName"
                  },
                  "Attestation": {
                    "isAttested": false,
                    "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                  },
                  "Sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/sbomprocessor": {
      "post": {
        "tags": ["sbomprocessor"],
        "description": "process \u0026 inject sbom",
        "operationId": "sbomprocessor#processsbom",
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Harness account ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": { "type": "string", "description": "Harness account ID", "example": "eBqAoNchMLKigC_qZ5EdC" },
            "example": "eBqAoNchMLKigC_qZ5EdC"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "description": "Harness organization ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness organization ID",
              "default": "",
              "example": "test-org"
            },
            "example": "test-org"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "description": "Harness project ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness project ID",
              "default": "",
              "example": "test-project"
            },
            "example": "test-project"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProcesssbomRequestBody" },
              "example": {
                "artifact": {
                  "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                  "name": "harness/image",
                  "tag": "latest",
                  "type": "repo/image",
                  "url": "https://console.cloud.google.com/gcr/images/imageName"
                },
                "attestation": {
                  "isAttested": false,
                  "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                },
                "metadata": {
                  "buildUrl": "log4Jj",
                  "format": "log4Jj",
                  "pipelineExecutionId": "log4Jj",
                  "pipelineIdentifier": "log4Jj",
                  "sequenceId": "log4Jj",
                  "stageIdentifier": "log4Jj",
                  "stepExecutionId": "Earum in aut commodi est aut.",
                  "stepIdentifier": "log4Jj",
                  "tool": "log4Jj"
                },
                "sbom": {
                  "data": "RG9sb3JlbXF1ZSBzZXF1aSBldCBzaXQgaGljIGV1bS4=",
                  "name": "SBOM_Name",
                  "url": "https://console.google.com/storage"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProcesssbomResponseBody" },
                "example": { "ArtifactId": "Quas qui possimus deleniti." }
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/search/findany": {
      "post": {
        "tags": ["search"],
        "description": "Find a package references by name",
        "operationId": "search#findany",
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Harness account ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": { "type": "string", "description": "Harness account ID", "example": "eBqAoNchMLKigC_qZ5EdC" },
            "example": "eBqAoNchMLKigC_qZ5EdC"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "description": "Harness organization ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness organization ID",
              "default": "",
              "example": "test-org"
            },
            "example": "test-org"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "description": "Harness project ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness project ID",
              "default": "",
              "example": "test-project"
            },
            "example": "test-project"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FindanyRequestBody" },
              "example": {
                "ExecutionIdentifier": "test-org",
                "PipelineIdentifier": "test-org",
                "packageIdentifiers": [
                  { "name": "log4Jj" },
                  { "name": "log4Jj" },
                  { "name": "log4Jj" },
                  { "name": "log4Jj" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FindResponseBody" },
                "example": {
                  "packageReferences": [
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    },
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    },
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    },
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        },
        "security": [{ "jwt_header_Authorization": ["core_project_view"] }]
      }
    },
    "/api/v1/search/{packagename}": {
      "get": {
        "tags": ["search"],
        "description": "Find a package references by name",
        "operationId": "search#find",
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Harness account ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": { "type": "string", "description": "Harness account ID", "example": "eBqAoNchMLKigC_qZ5EdC" },
            "example": "eBqAoNchMLKigC_qZ5EdC"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "description": "Harness organization ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness organization ID",
              "default": "",
              "example": "test-org"
            },
            "example": "test-org"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "description": "Harness project ID",
            "allowEmptyValue": true,
            "required": true,
            "schema": {
              "type": "string",
              "description": "Harness project ID",
              "default": "",
              "example": "test-project"
            },
            "example": "test-project"
          },
          {
            "name": "packagename",
            "in": "path",
            "description": "Source ID associated with this connection source",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Source ID associated with this connection source",
              "example": "log4Jj"
            },
            "example": "log4Jj"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FindResponseBody" },
                "example": {
                  "packageReferences": [
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    },
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    },
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    },
                    {
                      "AccountName": "log4Jj",
                      "ArtifactName": "log4Jj",
                      "BuildURL": "log4Jj",
                      "Originator": "log4Jj",
                      "PipelineIdentifier": "log4Jj",
                      "SBOMURL": "log4Jj",
                      "SequenceId": "log4Jj",
                      "StageName": "log4Jj",
                      "VersionInfo": "log4Jj",
                      "name": "log4Jj"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest: Bad Request response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "401": {
            "description": "Unauthorized: Unauthorized response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "403": {
            "description": "Forbidden: Forbidden response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "404": {
            "description": "NotFound: Not Found response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        },
        "security": [{ "jwt_header_Authorization": ["core_project_view"] }]
      }
    },
    "/api/v1/system/health": {
      "get": {
        "tags": ["system"],
        "description": "Check service health",
        "operationId": "system#health",
        "responses": {
          "204": { "description": "No Content response." },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    },
    "/api/v1/system/version": {
      "get": {
        "tags": ["system"],
        "description": "Check service version",
        "operationId": "system#version",
        "responses": {
          "200": {
            "description": "OK response.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServiceVersion" },
                "example": { "commit": "96381692bf3a2bd7904769c6886e832435768b57", "version": "v0.123.0" }
              }
            }
          },
          "500": {
            "description": "InternalServer: Internal Server Error response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          },
          "502": {
            "description": "BadGateway: Bad Gateway response.",
            "content": { "application/vnd.goa.error": { "schema": { "$ref": "#/components/schemas/Error" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArtifactResult": {
        "type": "object",
        "properties": {
          "artifact": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the artifact",
                "default": "",
                "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
              },
              "name": {
                "type": "string",
                "description": "name of the artifact",
                "default": "",
                "example": "harness/image"
              },
              "tag": {
                "type": "string",
                "description": "tag of the artifact",
                "default": "latest",
                "example": "latest"
              },
              "type": {
                "type": "string",
                "description": "type of the artifact",
                "default": "",
                "example": "repo/image"
              },
              "url": {
                "type": "string",
                "description": "url of the artifact",
                "default": "",
                "example": "https://console.cloud.google.com/gcr/images/imageName"
              }
            },
            "example": {
              "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
              "name": "harness/image",
              "tag": "latest",
              "type": "repo/image",
              "url": "https://console.cloud.google.com/gcr/images/imageName"
            },
            "required": ["type", "name", "url"]
          },
          "attestation": {
            "type": "object",
            "properties": {
              "isAttested": {
                "type": "boolean",
                "description": "is the sbom attested or not",
                "default": false,
                "example": false
              },
              "url": {
                "type": "string",
                "description": "url of the attested file",
                "default": "",
                "example": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
              }
            },
            "example": {
              "isAttested": false,
              "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
            }
          },
          "sbom": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "name of the sbom", "default": "", "example": "SBOM_Name" },
              "url": {
                "type": "string",
                "description": "url of the sbom",
                "default": "",
                "example": "\u003c\u003csbom_location\u003e\u003e"
              }
            },
            "example": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" },
            "required": ["name"]
          }
        },
        "description": "result of get artifacts by id",
        "example": {
          "artifact": {
            "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
            "name": "harness/image",
            "tag": "latest",
            "type": "repo/image",
            "url": "https://console.cloud.google.com/gcr/images/imageName"
          },
          "attestation": {
            "isAttested": false,
            "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
          },
          "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
        }
      },
      "CreateArtifactRequestBody": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "type": "string",
            "description": "Harness account ID",
            "example": "eBqAoNchMLKigC_qZ5EdC"
          },
          "artifact": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the artifact",
                "default": "",
                "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
              },
              "name": {
                "type": "string",
                "description": "name of the artifact",
                "default": "",
                "example": "harness/image"
              },
              "tag": {
                "type": "string",
                "description": "tag of the artifact",
                "default": "latest",
                "example": "latest"
              },
              "type": {
                "type": "string",
                "description": "type of the artifact",
                "default": "",
                "example": "repo/image"
              },
              "url": {
                "type": "string",
                "description": "url of the artifact",
                "default": "",
                "example": "https://console.cloud.google.com/gcr/images/imageName"
              }
            },
            "example": {
              "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
              "name": "harness/image",
              "tag": "latest",
              "type": "repo/image",
              "url": "https://console.cloud.google.com/gcr/images/imageName"
            },
            "required": ["type", "name", "url"]
          },
          "attestation": {
            "type": "object",
            "properties": {
              "isAttested": {
                "type": "boolean",
                "description": "is the sbom attested or not",
                "default": false,
                "example": false
              },
              "url": {
                "type": "string",
                "description": "url of the attested file",
                "default": "",
                "example": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
              }
            },
            "example": {
              "isAttested": false,
              "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "buildUrl": { "type": "string", "description": "BuildURL", "default": "", "example": "log4Jj" },
              "format": {
                "type": "string",
                "description": "stage name where sbom is generated",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              },
              "pipelineExecutionId": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              },
              "pipelineIdentifier": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              },
              "sequenceId": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj"
              },
              "stageIdentifier": {
                "type": "string",
                "description": "name of the Stage",
                "default": "",
                "example": "log4Jj"
              },
              "stepExecutionId": {
                "type": "string",
                "description": "StepExecutionId",
                "default": "",
                "example": "Qui laudantium incidunt nemo id."
              },
              "stepIdentifier": {
                "type": "string",
                "description": "id of the step",
                "default": "",
                "example": "log4Jj"
              },
              "tool": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              }
            },
            "example": {
              "buildUrl": "log4Jj",
              "format": "log4Jj",
              "pipelineExecutionId": "log4Jj",
              "pipelineIdentifier": "log4Jj",
              "sequenceId": "log4Jj",
              "stageIdentifier": "log4Jj",
              "stepExecutionId": "Sit corrupti fuga et voluptatem.",
              "stepIdentifier": "log4Jj",
              "tool": "log4Jj"
            }
          },
          "orgIdentifier": {
            "type": "string",
            "description": "Harness organization ID",
            "default": "",
            "example": "test-org"
          },
          "projectIdentifier": {
            "type": "string",
            "description": "Harness project ID",
            "default": "",
            "example": "test-project"
          },
          "sbom": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "description": "serialised sbom data",
                "example": "UXVpc3F1YW0gcXVpZGVtIHV0Lg==",
                "format": "binary"
              },
              "name": { "type": "string", "description": "name of the sbom", "default": "", "example": "SBOM_Name" },
              "url": {
                "type": "string",
                "description": "URL of the sbom",
                "default": "",
                "example": "https://console.google.com/storage"
              }
            },
            "example": {
              "data": "Tm9iaXMgbnVtcXVhbS4=",
              "name": "SBOM_Name",
              "url": "https://console.google.com/storage"
            }
          }
        },
        "description": "A sbom process request on sscs",
        "example": {
          "accountIdentifier": "eBqAoNchMLKigC_qZ5EdC",
          "artifact": {
            "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
            "name": "harness/image",
            "tag": "latest",
            "type": "repo/image",
            "url": "https://console.cloud.google.com/gcr/images/imageName"
          },
          "attestation": {
            "isAttested": false,
            "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
          },
          "metadata": {
            "buildUrl": "log4Jj",
            "format": "log4Jj",
            "pipelineExecutionId": "log4Jj",
            "pipelineIdentifier": "log4Jj",
            "sequenceId": "log4Jj",
            "stageIdentifier": "log4Jj",
            "stepExecutionId": "Repellat et distinctio porro suscipit.",
            "stepIdentifier": "log4Jj",
            "tool": "log4Jj"
          },
          "orgIdentifier": "test-org",
          "projectIdentifier": "test-project",
          "sbom": {
            "data": "U2ludCB2b2x1cHRhdGVzIHZvbHVwdGF0ZW0gZG9sb3JlcyBzaW50IGxpYmVybyBxdWFlcmF0Lg==",
            "name": "SBOM_Name",
            "url": "https://console.google.com/storage"
          }
        },
        "required": ["accountIdentifier", "orgIdentifier", "projectIdentifier"]
      },
      "CreateArtifactResponseBody": {
        "type": "object",
        "properties": { "artifactId": { "type": "string", "example": "Incidunt minima nihil." } },
        "example": { "artifactId": "Excepturi pariatur commodi." },
        "required": ["artifactId"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "fault": { "type": "boolean", "description": "Is the error a server-side fault?", "example": false },
          "id": {
            "type": "string",
            "description": "ID is a unique identifier for this particular occurrence of the problem.",
            "example": "123abc"
          },
          "message": {
            "type": "string",
            "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
            "example": "parameter 'p' must be an integer"
          },
          "name": {
            "type": "string",
            "description": "Name is the name of this class of errors.",
            "example": "bad_request"
          },
          "temporary": { "type": "boolean", "description": "Is the error temporary?", "example": false },
          "timeout": { "type": "boolean", "description": "Is the error a timeout?", "example": true }
        },
        "example": { "id": "3F1FKVRR", "message": "Value of ID must be an integer", "name": "bad_request" },
        "required": ["name", "id", "message", "temporary", "timeout", "fault"]
      },
      "FindResponseBody": {
        "type": "object",
        "properties": {
          "packageReferences": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PackageReference" },
            "example": [
              {
                "AccountName": "log4Jj",
                "ArtifactName": "log4Jj",
                "BuildURL": "log4Jj",
                "Originator": "log4Jj",
                "PipelineIdentifier": "log4Jj",
                "SBOMURL": "log4Jj",
                "SequenceId": "log4Jj",
                "StageName": "log4Jj",
                "VersionInfo": "log4Jj",
                "name": "log4Jj"
              },
              {
                "AccountName": "log4Jj",
                "ArtifactName": "log4Jj",
                "BuildURL": "log4Jj",
                "Originator": "log4Jj",
                "PipelineIdentifier": "log4Jj",
                "SBOMURL": "log4Jj",
                "SequenceId": "log4Jj",
                "StageName": "log4Jj",
                "VersionInfo": "log4Jj",
                "name": "log4Jj"
              }
            ]
          }
        },
        "example": {
          "packageReferences": [
            {
              "AccountName": "log4Jj",
              "ArtifactName": "log4Jj",
              "BuildURL": "log4Jj",
              "Originator": "log4Jj",
              "PipelineIdentifier": "log4Jj",
              "SBOMURL": "log4Jj",
              "SequenceId": "log4Jj",
              "StageName": "log4Jj",
              "VersionInfo": "log4Jj",
              "name": "log4Jj"
            },
            {
              "AccountName": "log4Jj",
              "ArtifactName": "log4Jj",
              "BuildURL": "log4Jj",
              "Originator": "log4Jj",
              "PipelineIdentifier": "log4Jj",
              "SBOMURL": "log4Jj",
              "SequenceId": "log4Jj",
              "StageName": "log4Jj",
              "VersionInfo": "log4Jj",
              "name": "log4Jj"
            },
            {
              "AccountName": "log4Jj",
              "ArtifactName": "log4Jj",
              "BuildURL": "log4Jj",
              "Originator": "log4Jj",
              "PipelineIdentifier": "log4Jj",
              "SBOMURL": "log4Jj",
              "SequenceId": "log4Jj",
              "StageName": "log4Jj",
              "VersionInfo": "log4Jj",
              "name": "log4Jj"
            }
          ]
        },
        "required": ["packageReferences"]
      },
      "FindanyRequestBody": {
        "type": "object",
        "properties": {
          "ExecutionIdentifier": {
            "type": "string",
            "description": "Harness ExecutionIdentifier ID",
            "default": "",
            "example": "test-org"
          },
          "PipelineIdentifier": {
            "type": "string",
            "description": "Harness pipeline ID",
            "default": "",
            "example": "test-org"
          },
          "packageIdentifiers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PackageIdentifier" },
            "example": [{ "name": "log4Jj" }, { "name": "log4Jj" }, { "name": "log4Jj" }]
          }
        },
        "example": {
          "ExecutionIdentifier": "test-org",
          "PipelineIdentifier": "test-org",
          "packageIdentifiers": [{ "name": "log4Jj" }, { "name": "log4Jj" }, { "name": "log4Jj" }]
        },
        "required": ["packageIdentifiers"]
      },
      "GetArtifactsByIDResponseBody": {
        "type": "object",
        "properties": {
          "artifacts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ArtifactResult" },
            "example": [
              {
                "artifact": {
                  "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                  "name": "harness/image",
                  "tag": "latest",
                  "type": "repo/image",
                  "url": "https://console.cloud.google.com/gcr/images/imageName"
                },
                "attestation": {
                  "isAttested": false,
                  "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                },
                "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
              },
              {
                "artifact": {
                  "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                  "name": "harness/image",
                  "tag": "latest",
                  "type": "repo/image",
                  "url": "https://console.cloud.google.com/gcr/images/imageName"
                },
                "attestation": {
                  "isAttested": false,
                  "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
                },
                "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
              }
            ]
          }
        },
        "example": {
          "artifacts": [
            {
              "artifact": {
                "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                "name": "harness/image",
                "tag": "latest",
                "type": "repo/image",
                "url": "https://console.cloud.google.com/gcr/images/imageName"
              },
              "attestation": {
                "isAttested": false,
                "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
              },
              "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
            },
            {
              "artifact": {
                "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
                "name": "harness/image",
                "tag": "latest",
                "type": "repo/image",
                "url": "https://console.cloud.google.com/gcr/images/imageName"
              },
              "attestation": {
                "isAttested": false,
                "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
              },
              "sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
            }
          ]
        }
      },
      "GetUniqueArtifactResponseBody": {
        "type": "object",
        "properties": {
          "Artifact": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the artifact",
                "default": "",
                "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
              },
              "name": {
                "type": "string",
                "description": "name of the artifact",
                "default": "",
                "example": "harness/image"
              },
              "tag": {
                "type": "string",
                "description": "tag of the artifact",
                "default": "latest",
                "example": "latest"
              },
              "type": {
                "type": "string",
                "description": "type of the artifact",
                "default": "",
                "example": "repo/image"
              },
              "url": {
                "type": "string",
                "description": "url of the artifact",
                "default": "",
                "example": "https://console.cloud.google.com/gcr/images/imageName"
              }
            },
            "example": {
              "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
              "name": "harness/image",
              "tag": "latest",
              "type": "repo/image",
              "url": "https://console.cloud.google.com/gcr/images/imageName"
            },
            "required": ["type", "name", "url"]
          },
          "Attestation": {
            "type": "object",
            "properties": {
              "isAttested": {
                "type": "boolean",
                "description": "is the sbom attested or not",
                "default": false,
                "example": false
              },
              "url": {
                "type": "string",
                "description": "url of the attested file",
                "default": "",
                "example": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
              }
            },
            "example": {
              "isAttested": false,
              "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
            }
          },
          "Sbom": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "name of the sbom", "default": "", "example": "SBOM_Name" },
              "url": {
                "type": "string",
                "description": "url of the sbom",
                "default": "",
                "example": "\u003c\u003csbom_location\u003e\u003e"
              }
            },
            "example": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" },
            "required": ["name"]
          }
        },
        "example": {
          "Artifact": {
            "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
            "name": "harness/image",
            "tag": "latest",
            "type": "repo/image",
            "url": "https://console.cloud.google.com/gcr/images/imageName"
          },
          "Attestation": {
            "isAttested": false,
            "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
          },
          "Sbom": { "name": "SBOM_Name", "url": "\u003c\u003csbom_location\u003e\u003e" }
        }
      },
      "LoginRequestBody": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password",
            "example": "Omnis quia iure laudantium in quasi dolorum."
          }
        },
        "example": { "password": "Dolore accusantium commodi." },
        "required": ["password"]
      },
      "PackageIdentifier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          }
        },
        "description": "A package identifier",
        "example": { "name": "log4Jj" }
      },
      "PackageReference": {
        "type": "object",
        "properties": {
          "AccountName": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          },
          "ArtifactName": {
            "type": "string",
            "description": "Source ID associated with this connection source",
            "default": "",
            "example": "log4Jj"
          },
          "BuildURL": {
            "type": "string",
            "description": "Source ID associated with this connection source",
            "default": "",
            "example": "log4Jj"
          },
          "Originator": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          },
          "PipelineIdentifier": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          },
          "SBOMURL": {
            "type": "string",
            "description": "Source ID associated with this connection source",
            "default": "",
            "example": "log4Jj"
          },
          "SequenceId": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          },
          "StageName": {
            "type": "string",
            "description": "stage name where sbom is generated",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          },
          "VersionInfo": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "description": "name of the package",
            "default": "",
            "example": "log4Jj",
            "minLength": 3
          }
        },
        "description": "A package search request on sscs",
        "example": {
          "AccountName": "log4Jj",
          "ArtifactName": "log4Jj",
          "BuildURL": "log4Jj",
          "Originator": "log4Jj",
          "PipelineIdentifier": "log4Jj",
          "SBOMURL": "log4Jj",
          "SequenceId": "log4Jj",
          "StageName": "log4Jj",
          "VersionInfo": "log4Jj",
          "name": "log4Jj"
        }
      },
      "ProcesssbomRequestBody": {
        "type": "object",
        "properties": {
          "artifact": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the artifact",
                "default": "",
                "example": "089855ea-f90e-4bea-a5c9-b5ddf85d3180"
              },
              "name": {
                "type": "string",
                "description": "name of the artifact",
                "default": "",
                "example": "harness/image"
              },
              "tag": {
                "type": "string",
                "description": "tag of the artifact",
                "default": "latest",
                "example": "latest"
              },
              "type": {
                "type": "string",
                "description": "type of the artifact",
                "default": "",
                "example": "repo/image"
              },
              "url": {
                "type": "string",
                "description": "url of the artifact",
                "default": "",
                "example": "https://console.cloud.google.com/gcr/images/imageName"
              }
            },
            "example": {
              "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
              "name": "harness/image",
              "tag": "latest",
              "type": "repo/image",
              "url": "https://console.cloud.google.com/gcr/images/imageName"
            },
            "required": ["type", "name", "url"]
          },
          "attestation": {
            "type": "object",
            "properties": {
              "isAttested": {
                "type": "boolean",
                "description": "is the sbom attested or not",
                "default": false,
                "example": false
              },
              "url": {
                "type": "string",
                "description": "url of the attested file",
                "default": "",
                "example": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
              }
            },
            "example": {
              "isAttested": false,
              "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "buildUrl": { "type": "string", "description": "BuildURL", "default": "", "example": "log4Jj" },
              "format": {
                "type": "string",
                "description": "stage name where sbom is generated",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              },
              "pipelineExecutionId": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              },
              "pipelineIdentifier": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              },
              "sequenceId": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj"
              },
              "stageIdentifier": {
                "type": "string",
                "description": "name of the Stage",
                "default": "",
                "example": "log4Jj"
              },
              "stepExecutionId": {
                "type": "string",
                "description": "StepExecutionId",
                "default": "",
                "example": "Et numquam nam dolores."
              },
              "stepIdentifier": {
                "type": "string",
                "description": "id of the step",
                "default": "",
                "example": "log4Jj"
              },
              "tool": {
                "type": "string",
                "description": "name of the package",
                "default": "",
                "example": "log4Jj",
                "minLength": 3
              }
            },
            "example": {
              "buildUrl": "log4Jj",
              "format": "log4Jj",
              "pipelineExecutionId": "log4Jj",
              "pipelineIdentifier": "log4Jj",
              "sequenceId": "log4Jj",
              "stageIdentifier": "log4Jj",
              "stepExecutionId": "Et nisi ab ipsa mollitia earum.",
              "stepIdentifier": "log4Jj",
              "tool": "log4Jj"
            }
          },
          "sbom": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "description": "serialised sbom data",
                "example": "RXN0IGlwc2Eu",
                "format": "binary"
              },
              "name": { "type": "string", "description": "name of the sbom", "default": "", "example": "SBOM_Name" },
              "url": {
                "type": "string",
                "description": "URL of the sbom",
                "default": "",
                "example": "https://console.google.com/storage"
              }
            },
            "example": {
              "data": "UXVpYnVzZGFtIHByYWVzZW50aXVtIHBsYWNlYXQgdm9sdXB0YXRpYnVzLg==",
              "name": "SBOM_Name",
              "url": "https://console.google.com/storage"
            }
          }
        },
        "description": "A sbom process request on sscs",
        "example": {
          "artifact": {
            "id": "089855ea-f90e-4bea-a5c9-b5ddf85d3180",
            "name": "harness/image",
            "tag": "latest",
            "type": "repo/image",
            "url": "https://console.cloud.google.com/gcr/images/imageName"
          },
          "attestation": {
            "isAttested": false,
            "url": "https://storage.googleapis.com/sbom_store_public/kmpySmUISimoRrJL6NL73w/default/SSCS_CI_Plugin_Demo/CKO_SSCA_Pipeline/Build/39/q940CvjoQj-GEInJQfWiwg/sbom"
          },
          "metadata": {
            "buildUrl": "log4Jj",
            "format": "log4Jj",
            "pipelineExecutionId": "log4Jj",
            "pipelineIdentifier": "log4Jj",
            "sequenceId": "log4Jj",
            "stageIdentifier": "log4Jj",
            "stepExecutionId": "Non praesentium.",
            "stepIdentifier": "log4Jj",
            "tool": "log4Jj"
          },
          "sbom": {
            "data": "UXVpIG9kaW8gaXVyZSB2ZXJvIHF1b3MgdmVyby4=",
            "name": "SBOM_Name",
            "url": "https://console.google.com/storage"
          }
        }
      },
      "ProcesssbomResponseBody": {
        "type": "object",
        "properties": {
          "ArtifactId": {
            "type": "string",
            "description": "ID of the artifact",
            "example": "Amet repudiandae explicabo ipsam fugit et."
          }
        },
        "example": { "ArtifactId": "Quidem doloribus ducimus." },
        "required": ["ArtifactId"]
      },
      "ServiceVersion": {
        "type": "object",
        "properties": {
          "commit": {
            "type": "string",
            "description": "Build identifier",
            "example": "96381692bf3a2bd7904769c6886e832435768b57"
          },
          "version": { "type": "string", "description": "Version number", "example": "v0.123.0" }
        },
        "example": { "commit": "96381692bf3a2bd7904769c6886e832435768b57", "version": "v0.123.0" },
        "required": ["version", "commit"]
      }
    },
    "securitySchemes": { "jwt_header_Authorization": { "type": "http", "scheme": "bearer" } }
  },
  "tags": [
    { "name": "dev", "description": "Development endpoints" },
    { "name": "artifact", "description": "generate the artifacts for a given SBOM" },
    { "name": "sbomprocessor", "description": "process the raw sbom \u0026 injest it" },
    { "name": "search", "description": "search across the sbom generated from artifacts" },
    { "name": "system", "description": "System version and health" }
  ]
}
